<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="SearchHistoryDataSet" targetNamespace="http://tempuri.org/SearchHistoryDataSet.xsd" xmlns:mstns="http://tempuri.org/SearchHistoryDataSet.xsd" xmlns="http://tempuri.org/SearchHistoryDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="SearchHistoryConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="SearchHistoryConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.RSSReader.Properties.Settings.GlobalReference.Default.SearchHistoryConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="HistoryTableAdapter" GeneratorDataComponentClassName="HistoryTableAdapter" Name="History" UserDataComponentName="HistoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SearchHistoryConnectionString (Settings)" DbObjectName="dbo.History" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[History] WHERE (([HistoryID] = @Original_HistoryID) AND ((@IsNull_SearchText = 1 AND [SearchText] IS NULL) OR ([SearchText] = @Original_SearchText)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_HistoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HistoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SearchText" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SearchText" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SearchText" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SearchText" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[History] ([HistoryID], [SearchText]) VALUES (@HistoryID, @SearchText);
SELECT HistoryID, SearchText FROM History WHERE (HistoryID = @HistoryID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@HistoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HistoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SearchText" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SearchText" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT HistoryID, SearchText FROM dbo.History</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[History] SET [HistoryID] = @HistoryID, [SearchText] = @SearchText WHERE (([HistoryID] = @Original_HistoryID) AND ((@IsNull_SearchText = 1 AND [SearchText] IS NULL) OR ([SearchText] = @Original_SearchText)));
SELECT HistoryID, SearchText FROM History WHERE (HistoryID = @HistoryID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@HistoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HistoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SearchText" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SearchText" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_HistoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="HistoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SearchText" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SearchText" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SearchText" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SearchText" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="HistoryID" DataSetColumn="HistoryID" />
              <Mapping SourceColumn="SearchText" DataSetColumn="SearchText" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="SearchHistoryConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [History] ([SearchText]) VALUES (@p1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="p1" ColumnName="SearchText" DataSourceName="[C:\USERS\JIM\DOCUMENTS\CODING\CSHARP\RSSREADER\RSSREADER\SEARCHHISTORY.MDF].dbo.History" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@p1" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="SearchText" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="SearchHistoryDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="SearchHistoryDataSet" msprop:Generator_UserDSName="SearchHistoryDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="History" msprop:Generator_TableClassName="HistoryDataTable" msprop:Generator_TableVarName="tableHistory" msprop:Generator_RowChangedName="HistoryRowChanged" msprop:Generator_TablePropName="History" msprop:Generator_RowDeletingName="HistoryRowDeleting" msprop:Generator_RowChangingName="HistoryRowChanging" msprop:Generator_RowEvHandlerName="HistoryRowChangeEventHandler" msprop:Generator_RowDeletedName="HistoryRowDeleted" msprop:Generator_RowClassName="HistoryRow" msprop:Generator_UserTableName="History" msprop:Generator_RowEvArgName="HistoryRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="HistoryID" msprop:Generator_ColumnVarNameInTable="columnHistoryID" msprop:Generator_ColumnPropNameInRow="HistoryID" msprop:Generator_ColumnPropNameInTable="HistoryIDColumn" msprop:Generator_UserColumnName="HistoryID" type="xs:int" />
              <xs:element name="SearchText" msprop:Generator_ColumnVarNameInTable="columnSearchText" msprop:Generator_ColumnPropNameInRow="SearchText" msprop:Generator_ColumnPropNameInTable="SearchTextColumn" msprop:Generator_UserColumnName="SearchText" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:History" />
      <xs:field xpath="mstns:HistoryID" />
    </xs:unique>
  </xs:element>
</xs:schema>